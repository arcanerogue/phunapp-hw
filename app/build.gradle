apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.glopez.phunapp"
        minSdkVersion 21
        //noinspection OldTargetApi
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        String sharedDirectory = 'src/testShared/java'
        test {
            test.java.srcDirs += sharedDirectory
        }
        androidTest {
            androidTest.java.srcDirs += sharedDirectory
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.andriodx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation "androidx.exifinterface:exifinterface:$versions.androidx"
    implementation "androidx.annotation:annotation:$versions.androidx"

    // Testing
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:rules:$versions.androidx_testing"
    androidTestImplementation "androidx.test:runner:$versions.androidx_testing"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    // Mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"

    // RetroFit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.gson_converter"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
    testImplementation "androidx.arch.core:core-testing:$versions.lifecycle_testing"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.lifecycle_testing"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"

    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"

    // Timber
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
}
